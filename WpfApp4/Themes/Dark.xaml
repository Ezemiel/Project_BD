<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="BackgroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="ForegroundText" Color="#FF4CAF50"/>
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#FF4CAF50"/>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundText}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TitleStyle" TargetType="Window">
        <Setter Property="Foreground" Value="{StaticResource ForegroundText}" />
        <!-- Другие свойства, если есть -->
    </Style>

    <Style x:Key="GridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <!-- Другие свойства, если есть -->
    </Style>

    <Style x:Key="StackPanelStyle" TargetType="StackPanel">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <!-- Другие свойства, если есть -->
    </Style>

    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>
    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    <Style x:Key="DataGridDataGridCellsPanel" TargetType="DataGridCellsPanel">
        <Setter Property="Background" Value="Black"/>
    </Style>
    
    <Style x:Key="DataGridCellsPresenter" TargetType="DataGridCellsPresenter">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="DataGridColumnHeadersPresenter" TargetType="DataGridColumnHeadersPresenter">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Black"/>
    </Style>

    <Style x:Key="DataGridRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="Black" />
    </Style>


    <Style x:Key="DataGridRowHeader" TargetType="DataGridRowHeader">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Black"/>
    </Style>
    
    <Style x:Key="RegisterTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Cyan"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AppComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Style="{StaticResource AppComboBoxToggleButtonStyle}"
                                          Name="ToggleButton"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                            <TextBlock Text="{Binding SelectedItem.UserID, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                   Foreground="White"/>
                        </ToggleButton>
                        <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                            Background="Black"
                                            BorderThickness="1"
                                            BorderBrush="Gray"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <!-- TextBox для отображения данных пользователя -->
                    <TextBox Text="{Binding UserID}" Height="25" Background="Black" Foreground="White"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <!-- Другие сеттеры по необходимости -->
    </Style>

    <Style x:Key="IconStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Image Source="file:///C:/Users/admin/Pictures/31029add2feba58af429.png" Width="40" Height="36" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePickerTextBox">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                                <TextBox x:Name="PART_TextBox"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Foreground="{StaticResource ForegroundBrush}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, StringFormat={}{0:dd.MM.yyyy}}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Новый стиль для Calendar -->
            <Style x:Key="CalendarStyle" TargetType="Calendar">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="Black" />
                <Setter Property="Width" Value="170"/>
                <Setter Property="Height" Value="150"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Calendar">
                            <Grid Background="{TemplateBinding Background}">
                                <CalendarItem x:Name="PART_CalendarItem" Background="{TemplateBinding Background}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CalendarDayButtonStyle}" />
                <Setter Property="CalendarItemStyle" Value="{DynamicResource CalendarItemStyle}" />
            </Style>

            <Style x:Key="CalendarDayButtonStyle" TargetType="CalendarDayButton">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Width" Value="23" />
                <Setter Property="Height" Value="13" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CalendarDayButton">
                            <Grid Background="{TemplateBinding Background}">
                                <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CalendarItemStyle" TargetType="CalendarItem">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CalendarItem">
                            <Grid Background="{TemplateBinding Background}">
                                <ItemsPresenter/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <!-- Применение нового стиля к календарю внутри DatePicker -->
        <Setter Property="CalendarStyle" Value="{DynamicResource CalendarStyle}" />
    </Style>



</ResourceDictionary>
